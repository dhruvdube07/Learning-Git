<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Login</title>
    <!-- Favicon placeholder. Replace with your own favicon file -->
    <link rel="icon" type="image/png" href="https://placehold.co/16x16/000000/FFFFFF.png?text=L">
    <!-- Inter font for a clean, modern look -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap" rel="stylesheet">
    <!-- Tailwind CSS for easy and responsive styling -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
    </style>
</head>
<body class="bg-slate-100 flex items-center justify-center min-h-screen p-4">

    <!-- Login Form Container -->
    <div class="w-full max-w-sm bg-white rounded-xl shadow-xl p-8 space-y-6">

        <!-- Form Header -->
        <div class="text-center">
            <h1 class="text-3xl font-bold text-gray-900">Welcome Back</h1>
            <p class="mt-2 text-sm text-gray-500">
                Please log in to your account.
            </p>
        </div>

        <!-- The Login Form -->
        <form id="loginForm" class="space-y-6">
            <!-- Email Input Field -->
            <div>
                <label for="email" class="block text-sm font-medium text-gray-700">Email address</label>
                <div class="mt-1">
                    <input id="email" name="email" type="email" autocomplete="email" required class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-sky-500 focus:border-sky-500 sm:text-sm">
                </div>
            </div>

            <!-- Password Input Field -->
            <div>
                <label for="password" class="block text-sm font-medium text-gray-700">Password</label>
                <div class="mt-1">
                    <input id="password" name="password" type="password" autocomplete="current-password" required class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-sky-500 focus:border-sky-500 sm:text-sm">
                </div>
            </div>

            <!-- Forgot Password Link -->
            <div class="flex items-center justify-between">
                <div class="text-sm">
                    <a href="#" class="font-medium text-sky-600 hover:text-sky-500">
                        Forgot your password?
                    </a>
                </div>
            </div>

            <!-- Submit Button -->
            <div>
                <button type="submit" class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-sky-600 hover:bg-sky-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sky-500 transition-all duration-200">
                    Sign in
                </button>
            </div>
        </form>

        <!-- Message Box for user feedback -->
        <div id="messageBox" class="mt-4 p-4 text-center rounded-md text-sm font-medium hidden">
            <!-- This message will be shown on form submission -->
        </div>

    </div>

    <script>
        // Get the form and message box elements
        const loginForm = document.getElementById('loginForm');
        const messageBox = document.getElementById('messageBox');

        // Listen for the form submission event
        loginForm.addEventListener('submit', (event) => {
            // Prevent the default form submission behavior (which would reload the page)
            event.preventDefault();

            // Simulate a successful login
            messageBox.textContent = 'Login successful! You have been authenticated.';
            messageBox.classList.remove('hidden');
            messageBox.classList.remove('bg-red-100', 'text-red-700');
            messageBox.classList.add('bg-green-100', 'text-green-700');

            // You can replace the above with a real API call later.
            // For example, using fetch():
            /*
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;
            const data = { email, password };

            fetch('/api/login', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(data => {
                // Handle the response from the server
                messageBox.textContent = data.message;
                messageBox.classList.remove('hidden');
                if (data.success) {
                    messageBox.classList.add('bg-green-100', 'text-green-700');
                } else {
                    messageBox.classList.add('bg-red-100', 'text-red-700');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                messageBox.textContent = 'An error occurred. Please try again.';
                messageBox.classList.remove('hidden');
                messageBox.classList.add('bg-red-100', 'text-red-700');
            });
            */
        });
    </script>

</body>
</html>
